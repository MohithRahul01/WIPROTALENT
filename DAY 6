import java.io.*;
import java.util.*;
class UserMainCode{
public int findStringCode(String input1){
String str=input1.toUpperCase();    
String word[]=str.split(" ");    
String value2="";    
for(int i=0;i<word.length;i++)    {     
int sum=0;     
for(int j=0;j<word[i].length()/2;j++)     {      
int first=word[i].charAt(j);      
int last=word[i].charAt(word[i].length()-1-j);       
sum+=Math.abs(first-last);     
}    
 if(word[i].length()%2!=0)     
sum+=(word[i].charAt(word[i].length()/2)-64);          
String value=Integer.toString(sum);         
  value2+=value;   
 }   
 return Integer.parseInt(value2);
 }}



import java.io.*;
import java.util.*;
class UserMainCode{
public int getCodeThroughString(String input1){
String word[]=input1.split(" ");  
int sum=0;  
for(int i=0;i<word.length;i++)  
{          
sum+=word[i].length();  
}   
return (1 + (sum-1) %9); 
}}


import java.io.*;
import java.util.*;
class UserMainCode{
public int getCodeThroughString(String input1){
String word[]=input1.split(" ");  
int sum=0;  
for(int i=0;i<word.length;i++)  
{          
sum+=word[i].length();  
}   
return (1 + (sum-1) %9); 
}}


import java.io.*;
import java.util.*;
class UserMainCode
{
 public class Result
  {
    public final int output1;
    public final int output2;
public Result(int out1,int out2){
  output1=out1;
  output2=out2;
}}
  public Result findOriginalFirstAndSum(int[] input1,int input2){
int[] arr=new int[input2];
  arr[input2-1]=input1[input2-1];
  int sum=arr[input2-1];
  for(int i=input2-2;i>=0;i--)
        {
   arr[i]=input1[i]-arr[i+1];
   sum+=arr[i];
  }
         Result r1= new Result(arr[0],sum);
   return r1;
  }
    }


class UserMainCode
{
public class Result{
 public final int output1;
 public final int output2;
 public Result(int out1,int out2)
 {
  output1=out1;
  output2=out2;
 }
}
public Result decreasingSeq(int[] input1,int input2)
{
 int c1=0,c2=0,max=0;
for(int i=0;i<input2-1;i++)
        {
            if(input1[i]>input1[i+1])
            {
                c1++;
            }
            if((input1[i]<input1[i+1] && c1!=0) || ((i==input2-2) && c1!=0))
            {
                if(max<c1)
                {
                    max=c1;
                }
                c2++;
                c1=0;
            }
        }
        max=max+1;
        if(c2==0)
        {
            max=0;
        }
        if(input2==0)
        {
            max=0;
            c2=0;
        }
        Result r1= new Result(c2,max);
        return r1;
}
}


import java.io.*;
import  java.util.*;
class UserMainCode
{
public int mostFrequentlyOccurringDigit(int[] input1,int input2)
{
               int[] arr=new int[10];
  for(int i=0;i<input2;i++)
  {
    while(input1[i]!=0){
    int rem=input1[i]%10;
    arr[rem]++;
    input1[i]/=10;
   }
 }
 int max=0;
 int higest_occur_number=0;
 for(int i=0;i<10;i++)
 {
  if(arr[i]>=max)
  {max=arr[i];
    higest_occur_number=i;
  }
 }
 return higest_occur_number;
}}



import java.io.*;
import  java.util.*;

class UserMainCode{  

public int sumOfPowerOfDigits(int input1){ 

double sum=0.0; 
String str=Integer.toString(input1);   
for(int i=0;i<str.length()-1;i++)  {   

 int a=Character.getNumericValue(str.charAt(i)); 
 int b=Character.getNumericValue(str.charAt(i+1));   
sum=sum + Math.pow(a, b);  
 } 
 return (int)sum+1; 
}}



import java.io.*;

import  java.util.*;

class UserMainCode{

public int sumOfSumsOfDigits(int input1){             

String str=Integer.toString(input1); 

int sum=0; 
for(int i=0;i<str.length();i++)  {   
 for(int j=i;j<str.length();j++){   

int num=Character.getNumericValue(str.charAt(j));   

sum+=num;  
}} 

  return sum; 

}}







import java.io.*;
import java.util.*;
class UserMaincode
{
   public String indentifyPossibleWords(String input1, String input2)
{
String st[]=input2.split(":");
        String str="";
        for(int i=0;i<st.length;i++)
        {
            if(st[i].length()!=input1.length())
                continue;
            String test=input1;
            int x=test.indexOf("_");
            char ch=st[i].charAt(x);
            test=test.replace('_', ch);
            test=test.toUpperCase();
            st[i]=st[i].toUpperCase();
            if(st[i].equals(test))
            {
                if(str=="")
                {
                    str=str+test;
                }
                else
                {
                    str=str+":"+test;
                }
            }
        }
        if(str=="")
            str="ERROR-009";
        return str;
}
}









String frnt1="",mid1="",end1="";
  String frnt2="",mid2="",end2="";
  String frnt3="",mid3="",end3="";
  String output1="",output2="",output3="";
  int len1=input1.length();
  int len2=input2.length();
        int len3=input3.length();
  if(len1==input1.length()){
  if(len1%3==0)
  {
   frnt1=input1.substring(0, (len1/3));
   mid1=input1.substring((len1/3), (2*(len1/3)));
   end1=input1.substring(2*(len1/3));
  }
  else if((len1-1)%3==0)
  {
   frnt1=input1.substring(0, (len1/3));
   mid1=input1.substring((len1/3), ((2*(len1/3))+1));
   end1=input1.substring(((2*(len1/3))+1));
  }
  else if((len1-2)%3==0)
  {
   frnt1=input1.substring(0, ((len1/3)+1));
   mid1=input1.substring(((len1/3)+1), ((2*(len1/3))+1));
   end1=input1.substring(((2*(len1/3))+1));
  }
  }
   if(len2==input2.length()){
  if(len2%3==0)
  {
   frnt2=input2.substring(0, (len2/3));
   mid2=input2.substring((len2/3), (2*(len2/3)));
   end2=input2.substring(2*(len2/3));
  }
  else if((len2-1)%3==0)
  {
   frnt2=input2.substring(0, (len2/3));
   mid2=input2.substring((len2/3), ((2*(len2/3))+1));
   end2=input2.substring(((2*(len2/3))+1));
  }
  else if((len2-2)%3==0)
  {
   frnt2=input2.substring(0, ((len2/3)+1));
   mid2=input2.substring(((len2/3)+1), ((2*(len2/3))+1));
   end2=input2.substring(((2*(len2/3))+1));
  }
  }
   if(len3==input3.length()){
  if(len3%3==0)
  {
   frnt3=input3.substring(0, (len3/3));
   mid3=input3.substring((len3/3), (2*(len3/3)));
   end3=input3.substring(2*(len3/3));
  }
  else if((len3-1)%3==0)
  {
   frnt3=input3.substring(0, (len3/3));
   mid3=input3.substring((len3/3), ((2*(len3/3))+1));
   end3=input3.substring(((2*(len3/3))+1));
  }
  else if((len3-2)%3==0)
  {
   frnt3=input3.substring(0, ((len3/3)+1));
   mid3=input3.substring(((len3/3)+1), ((2*(len3/3))+1));
   end3=input3.substring(((2*(len3/3))+1));
  }
  }
  output1=frnt1+frnt2+frnt3;
  output2=mid1+mid2+mid3;
  output3=end1+end2+end3;
  System.out.println(output3);
  output3=changeCase(output3);
  Result rs=new Result(output1,output2,output3);
  return rs;
    }
 public static String changeCase(String str)
 {
  StringBuffer newS = new StringBuffer(str);
  for(int i=0;i<str.length();i++)
  {
   Character c=str.charAt(i);
   if(Character.isLowerCase(c))
   {
    newS.replace(i, i+1, Character.toUpperCase(c)+"");
   }
   else
   {
    newS.replace(i, i+1, Character.toLowerCase(c)+"");
   }
  }
  str=newS.toString();
  return str;
 }
